diff --git a/index.js b/index.js
index a1820c3..84f3ee3 100644
--- a/index.js
+++ b/index.js
@@ -1,9 +1,8 @@
-/* global window, document, $, requestAnimationFrame, AudioContext, URL */
+/* global window, document, $, requestAnimationFrame, AudioContext */
 const createSwarm = require('killa-beez')
 const getUserMedia = require('getusermedia')
 const qs = require('querystring')
 const mediaRecorder = require('media-recorder-stream')
-const bel = require('bel')
 const FileWriteStream = require('filestream/write')
 const asyncLoad = require('async-load')
 const xhr = require('xhr')
@@ -25,7 +24,7 @@ const zipurl = 'https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js'
 const storage = new UserStorage()
 
 if (typeof window.AudioContext !== 'function' || typeof window.MediaRecorder !== 'function') {
-  byId('messages-container').appendChild(views.message({
+  byId('messages-container').appendChild(views.getMessage({
     icon: 'frown',
     type: 'warning',
     title: 'Your browser is not supported',
@@ -37,19 +36,7 @@ if (typeof window.AudioContext !== 'function' || typeof window.MediaRecorder !==
 
 const context = new AudioContext()
 const waudio = require('waudio')(context)
-
-const recordButton = bel `
-<button id="record" class="ui compact labeled icon button">
-  <i class="circle icon"></i>
-  <span>Record</span>
-</button>
-`
-
-const settingsButton = bel `
-<button id="settings" class="ui compact icon button">
-  <i class="settings icon"></i>
-</button>
-`
+const {recordButton} = views
 
 // This is the only
 const masterSoundOutput = waudio(true)
@@ -57,7 +44,7 @@ const masterSoundOutput = waudio(true)
 function addAudioFile (file) {
   let audio = waudio(file)
   audio.connect(masterSoundOutput)
-  let elem = views.audioFile(file, audio, context)
+  let elem = views.getAudioFile(file, audio, context)
 
   connectAudio(elem, audio)
   byId('audio-container').appendChild(elem)
@@ -82,14 +69,7 @@ function formatFileSize (bytes) {
 
 function connectRecording (pubkey, stream) {
   let classes = 'spinner loading icon download-icon'
-  let elem = bel `
-  <div class="downloads">
-    <div class="ui inverted divider"></div>
-    <div class="ui basic button record-download">
-      <i class="${classes}"></i><span class="bits"></span>
-    </div>
-  </div>`
-
+  const elem = views.getDownloadElem(classes)
   selector(`#a${pubkey} div.extra`).appendChild(elem)
   let span = selector(`#a${pubkey} span.bits`)
   let bytes = 0
@@ -114,8 +94,10 @@ function connectRecording (pubkey, stream) {
     button.recordingFile = file
     button.recordingDelay = ret.recordingDelay
     button.onclick = () => {
-      let n = recordingName(pubkey, button.recordingDelay)
-      bel `<a href="${URL.createObjectURL(file)}" download="${n}"></a>`.click()
+      views.getDownloadLink({
+        n: recordingName(pubkey, button.recordingDelay),
+        urlItem: file,
+      }).click()
     }
 
     enableZipDownload()
@@ -156,8 +138,11 @@ function enableZipDownload () {
     zip.generateAsync({
       type: 'blob'
     }).then(blob => {
-      let n = `${window.RollCallRoom}.zip`
-      bel `<a href="${URL.createObjectURL(blob)}" download="${n}"></a>`.click()
+      let n = 
+      views.getDownloadLink({
+        n: `${window.RollCallRoom}.zip`,
+        urlItem: blob,
+      }).click()
 
       $('#record i')
         .removeClass('notched circle loading')
@@ -290,7 +275,7 @@ function joinRoom (room) {
     video: false
   }
 
-  const message = views.message({
+  const message = views.getMessage({
     icon: 'unmute',
     title: 'Rollcall would like to access your microphone'
   })
@@ -301,7 +286,7 @@ function joinRoom (room) {
     if (err) console.error(err)
 
     let output = waudio(audioStream ? audioStream.clone() : null)
-    let myelem = views.remoteAudio(storage)
+    let myelem = views.getRemoteAudio(storage)
     connectAudio(myelem, output)
 
     message.update({
@@ -337,7 +322,7 @@ function joinRoom (room) {
         let remotes = values(swarm.peers).length
         let publicKey = stream.peer.publicKey
         let username = usernames[publicKey] || `Caller (${remotes})`
-        let elem = views.remoteAudio(storage, username, publicKey)
+        let elem = views.getRemoteAudio(storage, username, publicKey)
         connectAudio(elem, audio)
         byId('audio-container').appendChild(elem)
       })
@@ -353,18 +338,20 @@ function joinRoom (room) {
       byId('messages-container').removeChild(message)
 
       const topBar = byId('top-bar')
+      const {settingsButton} = views
+
       topBar.appendChild(settingsButton)
-      topBar.appendChild(views.shareButton())
+      topBar.appendChild(views.getShareButton())
       topBar.appendChild(recordButton)
 
-      views.settingsModal(storage).then((modal) => {
+      views.getSettingsModal(storage).then((modal) => {
         document.body.appendChild(modal)
         settingsButton.onclick = () => $(modal).modal('show')
       })
 
       recordButton.onclick = recording(swarm, output.stream)
 
-      views.dragDrop((files) => {
+      views.getDragDrop((files) => {
         files.forEach(file => {
           let audio = addAudioFile(file)
           // output.add(gain.inst)
@@ -373,7 +360,7 @@ function joinRoom (room) {
       })
 
       if (!audioStream) {
-        topBar.appendChild(bel `<div class="error notice">Listening only: no audio input available.</div>`)
+        topBar.appendChild(views.noAudioStreamWarning)
       }
     })
   })
diff --git a/lib/views.js b/lib/views.js
index 0972ecd..6aa2629 100644
--- a/lib/views.js
+++ b/lib/views.js
@@ -1,4 +1,4 @@
-/* global window, $ */
+/* global window, URL, $ */
 const bel = require('bel')
 const funky = require('funky')
 const dragDrop = require('drag-drop')
@@ -35,7 +35,7 @@ const shareButtonTooltip = `
 </div>
 `
 
-exports.shareButton = () => {
+exports.getShareButton = () => {
   let clipboard
 
   $(shareButton).popup({
@@ -76,7 +76,7 @@ const messageView = funky `
 </div>
 `
 
-exports.message = ({title, message, icon, type}) => {
+exports.getMessage = ({title, message, icon, type}) => {
   return messageView({
     title, message, icon, type
   })
@@ -105,7 +105,7 @@ const remoteAudioView = funky `
 </div>
 `
 
-exports.remoteAudio = (storage, username, publicKey) => {
+exports.getRemoteAudio = (storage, username, publicKey) => {
   const el = remoteAudioView({
     username: username || storage.get('username') || 'Me',
     key: publicKey
@@ -141,7 +141,7 @@ const audioFileView = funky `
   </div>
 </div>
 `
-exports.audioFile = (file, audio, context) => {
+exports.getAudioFile = (file, audio, context) => {
   const elem = audioFileView(file.name)
   const button = elem.querySelector('i.play-button')
 
@@ -180,7 +180,7 @@ const dragDropModal = bel `
 document.body.appendChild(dragDropModal)
 let timeout
 
-exports.dragDrop = (onDrop) => {
+exports.getDragDrop = (onDrop) => {
   dragDrop('body', {
     onDrop,
     onDragOver () {
@@ -234,7 +234,7 @@ function deviceToSelectOption (storage, device, i) {
   }
 }
 
-exports.settingsModal = (storage) => {
+exports.getSettingsModal = (storage) => {
   return navigator.mediaDevices.enumerateDevices().then((devices) => {
     return devices.filter(d => d.kind === 'audioinput')
   }).then((devices) => {
@@ -263,3 +263,32 @@ exports.settingsModal = (storage) => {
     return modal
   })
 }
+
+exports.recordButton = bel `
+<button id="record" class="ui compact labeled icon button">
+  <i class="circle icon"></i>
+  <span>Record</span>
+</button>
+`
+
+exports.settingsButton = bel `
+<button id="settings" class="ui compact icon button">
+  <i class="settings icon"></i>
+</button>
+`
+
+exports.noAudioStreamWarning = bel `
+<div class="error notice">Listening only: no audio input available.</div>
+`
+
+exports.getDownloadElem = (classes) => bel `
+<div class="downloads">
+  <div class="ui inverted divider"></div>
+  <div class="ui basic button record-download">
+    <i class="${classes}"></i><span class="bits"></span>
+  </div>
+</div>
+`
+exports.getDownloadLink = ({urlItem, n}) => bel `
+<a href="${URL.createObjectURL(urlItem)}" download="${n}"></a>
+`
